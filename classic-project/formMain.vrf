/*$B050000500*/
DCLFORM // formMain
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(BorderStyle) TYPE(*INTEGER2) VALUE(1)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('Navigation subfile example v1.0')
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(8370)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(7260)
INITPROP NAME(MaxButton) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('formMain')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1965)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(13185)
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('MS Sans Serif')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('9.75')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
INITPROP NAME(StartUpPosition) TYPE(*INTEGER2) VALUE(1)
INITPROP NAME(CreationID) TYPE(*BASICSTRING) VALUE('{BE755B52-EDC3-4801-AA40-8FE751378CD2}')
INITPROP NAME(ModifiedID) TYPE(*BASICSTRING) VALUE('{487AFED7-54C3-492E-A085-515813A35BB7}')
DCLMENU PARENT(formMain) // mnuForm1
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131176)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('mnuForm1')
DCLCTL CLSID('{9A54166B-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // sbfCust
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(5115)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(180)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('sbfCust')
INITPROP NAME(Tag) TYPE(*BASICSTRING) VALUE('roger')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(2160)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(12600)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt31.dll')
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131177)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(22225)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(9022)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(205)
INITPROP NAME(ForeColor) TYPE(*INTEGER4) VALUE(-2147483640)
INITPROP NAME(BackColor) TYPE(*INTEGER4) VALUE(-2147483643)
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Tahoma')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('12')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
INITPROP NAME(RowHeight) TYPE(*INTEGER4) VALUE(400)
INITPROP NAME(ButtonHeight) TYPE(*INTEGER4) VALUE(380)
INITPROP NAME(ButtonWidth) TYPE(*INTEGER4) VALUE(300)
INITPROP NAME(RowButtons) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(HScroll) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(VScroll) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(NoHideSel) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(NoLines) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(SingleSelect) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(RRNFldName) TYPE(*BASICSTRING) VALUE('sbfCust_RRN')
DCLPROP NAME(Fields) TYPE(*BLOBPROPSET) CLSID('{C263D36E-452D-4934-8E90-141DD8DECC1D}')
INITPROP NAME(Name0) TYPE(*BASICSTRING) VALUE('sbfCust_CMCustno')
INITPROP NAME(Type0) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(IntegralCount0) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(DecimalCount0) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading0) TYPE(*BASICSTRING) VALUE('CustNo')
INITPROP NAME(ColWidth0) TYPE(*INTEGER2) VALUE(1500)
INITPROP NAME(EditCode0) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord0) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse0) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(Hidden0) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(TotalBytes0) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(SubfileFldSize0) TYPE(*INTEGER2) VALUE(32)
INITPROP NAME(UpperCaseOnly0) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment0) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown0) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name1) TYPE(*BASICSTRING) VALUE('sbfCust_CMName')
INITPROP NAME(Type1) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount1) TYPE(*INTEGER2) VALUE(40)
INITPROP NAME(DecimalCount1) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading1) TYPE(*BASICSTRING) VALUE('Name')
INITPROP NAME(ColWidth1) TYPE(*INTEGER2) VALUE(5295)
INITPROP NAME(EditCode1) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord1) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse1) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden1) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(TotalBytes1) TYPE(*INTEGER2) VALUE(40)
INITPROP NAME(SubfileFldSize1) TYPE(*INTEGER2) VALUE(41)
INITPROP NAME(UpperCaseOnly1) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment1) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown1) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name2) TYPE(*BASICSTRING) VALUE('sbfCust_CMAddr1')
INITPROP NAME(Type2) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount2) TYPE(*INTEGER2) VALUE(35)
INITPROP NAME(DecimalCount2) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading2) TYPE(*BASICSTRING) VALUE('Address')
INITPROP NAME(ColWidth2) TYPE(*INTEGER2) VALUE(5445)
INITPROP NAME(EditCode2) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord2) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse2) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden2) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(TotalBytes2) TYPE(*INTEGER2) VALUE(35)
INITPROP NAME(SubfileFldSize2) TYPE(*INTEGER2) VALUE(36)
INITPROP NAME(UpperCaseOnly2) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment2) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown2) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name3) TYPE(*BASICSTRING) VALUE('sbfCust_CMAddr2')
INITPROP NAME(Type3) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount3) TYPE(*INTEGER2) VALUE(35)
INITPROP NAME(DecimalCount3) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading3) TYPE(*BASICSTRING) VALUE('Address')
INITPROP NAME(ColWidth3) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode3) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord3) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse3) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden3) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes3) TYPE(*INTEGER2) VALUE(35)
INITPROP NAME(SubfileFldSize3) TYPE(*INTEGER2) VALUE(36)
INITPROP NAME(UpperCaseOnly3) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment3) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown3) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name4) TYPE(*BASICSTRING) VALUE('sbfCust_CMCity')
INITPROP NAME(Type4) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount4) TYPE(*INTEGER2) VALUE(30)
INITPROP NAME(DecimalCount4) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading4) TYPE(*BASICSTRING) VALUE('City')
INITPROP NAME(ColWidth4) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode4) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord4) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse4) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden4) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes4) TYPE(*INTEGER2) VALUE(30)
INITPROP NAME(SubfileFldSize4) TYPE(*INTEGER2) VALUE(31)
INITPROP NAME(UpperCaseOnly4) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment4) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown4) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name5) TYPE(*BASICSTRING) VALUE('sbfCust_CMState')
INITPROP NAME(Type5) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount5) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(DecimalCount5) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading5) TYPE(*BASICSTRING) VALUE('State')
INITPROP NAME(ColWidth5) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode5) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord5) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse5) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden5) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes5) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(SubfileFldSize5) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(UpperCaseOnly5) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment5) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown5) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name6) TYPE(*BASICSTRING) VALUE('sbfCust_CMPostCode')
INITPROP NAME(Type6) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount6) TYPE(*INTEGER2) VALUE(10)
INITPROP NAME(DecimalCount6) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading6) TYPE(*BASICSTRING) VALUE('Postal Code')
INITPROP NAME(ColWidth6) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode6) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord6) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse6) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden6) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes6) TYPE(*INTEGER2) VALUE(10)
INITPROP NAME(SubfileFldSize6) TYPE(*INTEGER2) VALUE(11)
INITPROP NAME(UpperCaseOnly6) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment6) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown6) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name7) TYPE(*BASICSTRING) VALUE('sbfCust_CMActive')
INITPROP NAME(Type7) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount7) TYPE(*INTEGER2) VALUE(1)
INITPROP NAME(DecimalCount7) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading7) TYPE(*BASICSTRING) VALUE('Active')
INITPROP NAME(ColWidth7) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode7) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord7) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse7) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden7) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes7) TYPE(*INTEGER2) VALUE(1)
INITPROP NAME(SubfileFldSize7) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(UpperCaseOnly7) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment7) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown7) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name8) TYPE(*BASICSTRING) VALUE('sbfCust_CMPhone')
INITPROP NAME(Type8) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(IntegralCount8) TYPE(*INTEGER2) VALUE(20)
INITPROP NAME(DecimalCount8) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading8) TYPE(*BASICSTRING) VALUE('Phone')
INITPROP NAME(ColWidth8) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode8) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord8) TYPE(*BASICSTRING) VALUE('')
INITPROP NAME(Browse8) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden8) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes8) TYPE(*INTEGER2) VALUE(20)
INITPROP NAME(SubfileFldSize8) TYPE(*INTEGER2) VALUE(21)
INITPROP NAME(UpperCaseOnly8) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment8) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown8) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Name9) TYPE(*BASICSTRING) VALUE('sbfCust_CMFax')
INITPROP NAME(Type9) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(IntegralCount9) TYPE(*INTEGER2) VALUE(10)
INITPROP NAME(DecimalCount9) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(ColHeading9) TYPE(*BASICSTRING) VALUE('Fax')
INITPROP NAME(ColWidth9) TYPE(*INTEGER2) VALUE(-1)
INITPROP NAME(EditCode9) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(EditWord9) TYPE(*BASICSTRING) VALUE('0(   )&   -    ')
INITPROP NAME(Browse9) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Hidden9) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(TotalBytes9) TYPE(*INTEGER2) VALUE(10)
INITPROP NAME(SubfileFldSize9) TYPE(*INTEGER2) VALUE(34)
INITPROP NAME(UpperCaseOnly9) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Alignment9) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(DropDown9) TYPE(*INTEGER2) VALUE(0)
ENDPROP
INITPROP NAME(GridLinesColor) TYPE(*INTEGER4) VALUE(14737632)
DCLCTL CLSID('{9A54164F-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // Frame2
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(1656)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Frame2')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(180)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(5850)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(1)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131174)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(10319)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(2910)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(79)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('Customer details')
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('8.25')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(Frame2) // labelName
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(390)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(216)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelName')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(360)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(930)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(2)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(1640)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(688)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('[Name]')
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro SemiBold')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('14.25')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(600)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
INITPROP NAME(AutoSize) TYPE(*BOOLEAN) VALUE(-1)
INITPROP NAME(UseMnemonic) TYPE(*BOOLEAN) VALUE(0)
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(Frame2) // labelAddress
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(390)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(216)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelAddress')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(720)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(1170)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(2064)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(688)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('[Address]')
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('14.25')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
INITPROP NAME(AutoSize) TYPE(*BOOLEAN) VALUE(-1)
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(Frame2) // labelCSZ
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(390)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(216)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelCSZ')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1080)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(585)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(4)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(1032)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(688)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('[csz]')
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('14.25')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
INITPROP NAME(AutoSize) TYPE(*BOOLEAN) VALUE(-1)
DCLCTL CLSID('{9A54164F-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // Frame1
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(1008)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(6210)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Frame1')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(180)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(3750)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(5)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131174)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(6615)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(1773)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(79)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('Position to')
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('8.25')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
DCLCTL CLSID('{9A54164B-88B8-11CF-A6E2-00801E0111FB}') PARENT(Frame1) // textboxPositionTo
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(432)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(360)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('textboxPositionTo')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(360)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(2880)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(6)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131176)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(5080)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(741)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(93)
INITPROP NAME(ForeColor) TYPE(*INTEGER4) VALUE(-2147483640)
INITPROP NAME(BackColor) TYPE(*INTEGER4) VALUE(-2147483643)
DCLPROP NAME(Font) TYPE(*BLOBPROPSET) CLSID('{0BE35203-8F91-11CE-9DE3-00AA004BB851}')
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('Source Sans Pro')
INITPROP NAME(Size) TYPE(*CURRENCY) VALUE('12')
INITPROP NAME(Charset) TYPE(*INTEGER2) VALUE(0)
INITPROP NAME(Weight) TYPE(*INTEGER2) VALUE(400)
INITPROP NAME(Underline) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Italic) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(Strikethrough) TYPE(*BOOLEAN) VALUE(0)
ENDPROP
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // labelOddRowColor
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(9900)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelOddRowColor')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(90)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(2790)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(7)
INITPROP NAME(Visible) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(4921)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(476)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('subfile row color 1')
INITPROP NAME(BackColor) TYPE(*INTEGER4) VALUE(16777215)
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // labelEvenRowColor
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(9900)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelEvenRowColor')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(360)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(2790)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(Visible) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt35.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(4921)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(476)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('subfile row color 2')
INITPROP NAME(BackColor) TYPE(*INTEGER4) VALUE(16317915)
DCLCTL CLSID('{9A541643-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // imagePreviousPage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(540)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(7830)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('imagePreviousPage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1260)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(540)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(953)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(953)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(224)
INITPROP NAME(Picture) TYPE(*BLOB) VALUE('PropBagBlob0000')
DCLCTL CLSID('{9A541643-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // imageNextPage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(8370)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('imageNextPage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1260)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(224)
INITPROP NAME(Picture) TYPE(*BLOB) VALUE('PropBagBlob0001')
DCLCTL CLSID('{9A541643-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // imageLastPage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(8910)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('imageLastPage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1260)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(224)
INITPROP NAME(Picture) TYPE(*BLOB) VALUE('PropBagBlob0002')
DCLCTL CLSID('{9A541643-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // imageFirstPage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(7290)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('imageFirstPage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1260)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(224)
INITPROP NAME(Picture) TYPE(*BLOB) VALUE('PropBagBlob0003')
DCLCTL CLSID('{9A541647-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // labelMessage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('labelMessage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(7380)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(1005)
INITPROP NAME(TabIndex) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(8)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131175)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(1773)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(476)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(111)
INITPROP NAME(Caption) TYPE(*BASICSTRING) VALUE('[Message]')
INITPROP NAME(AutoSize) TYPE(*BOOLEAN) VALUE(-1)
DCLCTL CLSID('{8DC04C91-E0F4-11CF-9EDA-00A024D72D2B}') PARENT(formMain) // timerMessage
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(420)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(270)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('timerMessage')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1440)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(420)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(11)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(741)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(741)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(0)
INITPROP NAME(Interval) TYPE(*INTEGER4) VALUE(1500)
INITPROP NAME(Enabled) TYPE(*BOOLEAN) VALUE(0)
DCLCTL CLSID('{9A541643-88B8-11CF-A6E2-00801E0111FB}') PARENT(formMain) // imageRefresh
INITPROP NAME(Version) TYPE(*INTEGER4) VALUE(131181)
INITPROP NAME(_PersistType) TYPE(*INTEGER2) VALUE(3)
INITPROP NAME(Height) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(Left) TYPE(*INTEGER4) VALUE(6750)
INITPROP NAME(Name) TYPE(*BASICSTRING) VALUE('imageRefresh')
INITPROP NAME(Top) TYPE(*INTEGER4) VALUE(1260)
INITPROP NAME(Width) TYPE(*INTEGER4) VALUE(480)
INITPROP NAME(LicKey) TYPE(*BASICSTRING) VALUE('No License Key')
INITPROP NAME(ServerName) TYPE(*BASICSTRING) VALUE('avrrt50.dll')
INITPROP NAME(AllowClearReset) TYPE(*BOOLEAN) VALUE(0)
INITPROP NAME(DftPropType) TYPE(*INTEGER2) VALUE(9)
INITPROP NAME(_Version) TYPE(*INTEGER4) VALUE(131173)
INITPROP NAME(_ExtentX) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_ExtentY) TYPE(*INTEGER4) VALUE(847)
INITPROP NAME(_StockProps) TYPE(*INTEGER4) VALUE(224)
INITPROP NAME(Picture) TYPE(*BLOB) VALUE('PropBagBlob0004')
END
// [Return to repo](https://github.com/ASNA/classic-dotnet-navgrid)
// ### AVR Classic program to demonstrate a simple subfile for customer selection.
//
// #### [Show controls list and their properties.](formMain.vrf.controls.html)
// [See file schema here.](http://1clickurls.com/yT1m-Mq)
//
// ![](screen-shot-01.png?4)<br>
// <small>The subfile display</small>
// 
// ![](screen-shot-02.png?4)<br>
// <small>The update panel</small>
// 
// This program shows a simple page-at-a-time subfile that would be used 
// for navigation through a file. Once a row is located, the user would initiate 
// an action. That action isn't shown in the is example; this example focuses on 
// populating and navigating the subfile. 
// disabled: 90, 88, 89
// backcolor: 195, 195, 195

// ---

// Files opened for update aren't blocked like input files are. Therefore it's always best
// to use input files (which are blocked by default with AVR) for populating lists
// (such as subfiles and comboboxes). 
// The `Prefix` is a bit of a hack that provides fully-qualified field names.
DclDiskFile  Name(Cust) +
             Type(*INPUT) +
             Org(*INDEXED) +
             Prefix(Cust_) +
             NetBlockFactor(*Calc) +
             ImpOpen(*Yes) +
             AddRec(*No) +
             FileDesc('Examples/CMastNewL2') +
             DBDesc('*PUBLIC/DG NET Local') 

// This file is opened for update. When reads are made against this file that aren't 
// followed with a (nearly) immediate write, the `Unlock` opcode is used to unlock the record.  
DclDiskFile  Name(CustUpdate) +
             Type(*Update) +
             Org(*INDEXED) +
             Prefix(Cust_) +
             ImpOpen(*Yes) +
             RnmFmt(CUSTU) + 
             FileDesc('Examples/CMastNewL1') +
             DBDesc('*PUBLIC/DG Net Local')

//- These data structures aren't used in this program, but provide a 
//- potential discussion point.  
//- DclDS CustDS  ExtDesc(*Yes) +
//-               FileDesc('Examples/CMastNewL2') +
//-               DBDesc('*PUBLIC/DG NET Local') +
//-               Prefix(Cust_)
 
//- DclDS sbfCustDS  ExtDesc(*Yes) +
//-                  FileDesc('Examples/CMastNewL2') +
//-                  DBDesc('*PUBLIC/DG NET Local') +
//-                 Prefix(SbfCust_)

// This constant controls how many rows are presented
// in the subfile.  
DclConst SUBFILE_ROWS Value(12)
// This constant idenfies the (zero-based) first row in the subfile.  
DclConst TOP_ROW Value(0) 

// Labels on forms that have empty captions are very hard to work with
// at designtime. I add bracketed captions to these labels so that they 
// are easy to work with at runtime (for example, `[Name]`). When the 
// program starts these labels are cleared. 
labelName.Caption = ''
labelAddress.Caption = ''
labelCSZ.Caption = ''
labelMessage.Caption = ''

// Show first page of the subfile.
sbfCust_ShowFirstPage()
 
// End of mainline.

// ---
// Naming conventions:
//
// * _sbfCust.<method name>:_ Methods provided intrinsically by the subfile.

// * _sbfCust.<property name>:_ Properties provided intrinsically by the subfile.

// * _sbfCust_<method name>:_ Methods that manipulate the subfile provided in this program.

// * _sbfCust_<field name>:_ Fields that describe or control the subfile provided in this program.
// ---

// First page requested.
BEGSR imageFirstPage Click
    sbfCust_ShowFirstPage() 
ENDSR

// Next page requested.
BEGSR imageNextPage Click
    // Read the last populated row of the subfile.
    Chain sbfCust Key(sbfCust.RowCount)
    // Move the file pointer to next record after the one
    // in the last row. 
    SetGT Cust Key(sbfCust_CMName) 
    // Show the next page. 
    sbfCust_ShowPage()
ENDSR

// Previous page requested. 
BEGSR imagePreviousPage Click       
    sbfCust_ShowPreviousPage()
ENDSR

// Last page requested. 
BEGSR imageLastPage Click
    sbfCust_ShowLastPage()  
ENDSR

// Refresh subfile from top row. 
BEGSR imageRefresh Click
    sbfCust_Refresh(TOP_ROW) 
ENDSR

// Toggle refresh image to show mouse down.
BEGSR imageRefresh MouseDown
    DclSrParm Button TYPE(*INTEGER) LEN(2) 
    DclSrParm Shift TYPE(*INTEGER) LEN(2) 
    DclSrParm X TYPE(*INTEGER) LEN(4) 
    DclSrParm Y TYPE(*INTEGER) LEN(4) 

    LoadPicture File('refresh-disabled.jpg') target(imageRefresh) 
ENDSR

// Toggle refresh image to show mouse up.
BEGSR imageRefresh MouseUp
    DclSrParm Button TYPE(*INTEGER) LEN(2) 
    DclSrParm Shift TYPE(*INTEGER) LEN(2) 
    DclSrParm X TYPE(*INTEGER) LEN(4) 
    DclSrParm Y TYPE(*INTEGER) LEN(4) 

    LoadPicture File('refresh.jpg') target(imageRefresh) 
ENDSR

// Watch for ENTER key in the textboxPositionTo textbox. 
BegSr textboxPositionTo KeyPress
    DclSrParm KeyAscii TYPE(*INTEGER) LEN(2) BY(*REFERENCE)
 
    DclConst ENTER_KEY Value( 13)
    DclConst EAT_KEY   Value(  0)

    // Watch for an Enter keypress when ioPosition has 
    // focus. End the keypress event handler by setting 
    // KeyAscii to EAT_KEY (0) and then position the subfile.  
    // EAT_KEY keeps the Windows event loop from further 
    // processing this keypress.
    If (KeyAscii = ENTER_KEY)
        KeyAscii = EAT_KEY
        sbfCust_PositionTo(textboxPositionTo.Value)
        textboxPositionTo.Value = *Blanks
    EndIf
EndSr

// The current row changed in the subfile with either the 
// arrow keys, the mouse cursor, or programatically.  
BegSr sbfCust RecSwitch
    // FromRec is the zero-based row number from which the subfile is switching.
    DclSrParm FromRec  Type(*INTEGER) LEN(4)
 
    // Each time a row position is changed the customer info panel at the
    // top left of the screen is refreshed with customer info for the 
    // current subfile record. 
    // AVR Classic's subfile reports zero-based Row and Col properties, but the 
    // subfile RRN is one based. 
    // When chaining to the subfile with the subfile Row property, be sure to add 
    // one to it to 'translate' it to the corresponding one-based RRN.
    Chain sbfCust Key(sbfCust.Rodw + 1) NotFnd(*In50)
 
    // Populate customer info panel with fields from the 
    // just-read subfile row. 
    sbfCust_SetInfoDisplay()
EndSr
 
// This subfile event handler fires as the subfile row is changing.
// The subfile heading is a considered a row, just like the data rows. 
// The subfile heading row's ordinal position is -1 and the first data row 
// is zero. If the user moves the current row the entire subfile is 
// selected and that is very jarring to the user. This code looks to see 
// if the user attempted to move into the header and moves the row 
// selected back to the twop row (the zeroth row).
BegSr sbfCust SelChanging
    // Inhibit user moving to heading row of subfile.
    DclConst  HEADING_ROW   Value(-1)

    // Uncomment this LeaveSr and user move the row to the top of the 
    // subfile with the `up` arrow key to see the default behavior arrow
    // key behavior.  
    If (sbfCust.Row = HEADING_ROW)
        sbfCust_GoToRow(TOP_ROW)
    EndIf

    // The subfile header is row -1 (go figure!) and that means that
    // at initial program startup subCust.SelStartRow can be less than 
    // zero. Leave this routine is that's the case.     
    If sbfCust.SelStartRow < 0 
        sbfCust.SetFocus()
        LeaveSr
    EndIf     

    // The SelChanging event fires when the user moves the subfile to another 
    // row. The subfile.Row property reports the zero-based row the user is 
    // moving to (the target row), and the subfile.SelStartRow property reports
    // the zero-based row the user is moving from (the source row).

    // If the source row was changed attempt record edit. 
    If sbfCust.RecChanged[sbfCust.SelStartRow]
        // Read the changed row.
        Chain sbfCust Key(sbfCust.SelStartRow + 1)

        // Check for errors here. 
        If ValidateInputForCustomer()
            // Attempt file update.
            UpdateCustomer(sbfCust_CMCustNo)
            // Show message.
            SetMessageText('Customer changed: ' + %CHAR(%EDITC(sbfCust_CMCustNo, '1')))
            // Set row RecChanged status to false.
            sbfCust.RecChanged[sbfCust.SelStartRow] = *False
            // Position to the customer name.
            sbfCust_PositionTo(sbfCust_CMName)
        Else
            // If there was a validation error, move back to the 
            // source row.
            sbfCust.Row = sbfCust.SelStartRow  
            sbfCust.Col = sbfCust.SelStartCol
        EndIf 
    ENdIf 
    // Give the subfile focus.
    sbfCust.SetFocus()
EndSr

// Double-click on a subfile row to select it for update.     
BEGSR sbfCust DoubleClick
    CustomerUpdateWithForm()
EndSr 

// Clear the subfile and set its RRN to zero--making it ready for a 
// a new page. 
BegSr sbfCust_Initialize
    // Initialize and clear subfile.
    sbfCust_RRN = 0
    sbfCust.ClearObj()
EndSr

// Show first page of subfile.
BegSr sbfCust_ShowFirstPage
    // Position file at top of file.
    SetLL Cust Key(*Start)
    // Show the subfile page.
    sbfCust_ShowPage()
EndSr

// Show a page of subfile. 
BegSr sbfCust_ShowPage
    // Fill sbfCust with next group of rows from Cust's current 
    // file pointer position. This subroutine is called by all 
    // other page operations (first, previous, next, and last) 
    // to populate the subfile.
    // Having this one routine to populate the subfile provides 
    // one place where all of the housekeeping needed after 
    // writing a page to the subfile can be done. 

    // Clear the subfile.
    sbfCust_Initialize()

    // This is a page-at-a-time subfile. The SUBFILE_ROWS constants
    // defines how many rows are written to the subfile.
    Do FromVal(1) ToVal(SUBFILE_ROWS)
        Read Cust
        // If %EOF(Cust) then you've run out of records to 
        // put in the subfile.
        If (%EOF(Cust))
            Leave
        EndIf

        // Increment the subfile RRN property.
        sbfCust_RRN = sbfCust.RowCount + 1 
        // Assign fields to the subfile from the just-read 
        // recoord format. 
        sbfCust_AssignFields()

        // Write the subfile row.
        Write sbfCust

        // Zebra stripe the subfile.             
        SetRowColor(sbfCust_RRN)
    EndDo

    // Set the enabled/disabled status of the 
    // image buttons. 
    SetLeftButtonsStatus(MoreRecordsBack())
    SetRightButtonsStatus(MoreRecordsForward())
    // Explicitly set the subfile to top row (which
    // implicitly refreshes the customer info
    // at the top of the form.)
    sbfCust_GoToRow(TOP_ROW)    
    // Give focus to the subfile so its speed keys are in effect.
    sbfCust.SetFocus()
EndSr

// Show previous page of subfile.
BegSr sbfCust_ShowPreviousPage
    // Read the first row of the subfile to make that row's fields available.
    Chain sbfCust Key(1)  
    // Position the file at the record in the first row.
    SetLL Cust Key(sbfCust_CMName) Err(*Extended) 
    // Read backwards from there. 
    ReadCustOnePageBackwards()
   
    // Having read backwards a number of rows and then 
    // show the page. 
    sbfCust_ShowPage()
EndSr

// Show last page of subfile.
BegSr sbfCust_ShowLastPage 
    // Position file pointer at end of file.
    SetGT Cust Key(*HiVal)     
    // Read backwards from there. 
    ReadCustOnePageBackwards()
    // Having read backwards a number of rows and then 
    // show the page. 
    sbfCust_ShowPage()
EndSr 

BegSr sbfCust_AssignFields
    // Assign fields from the Cust file to the subfile. 
    sbfCust_CMCustNo = Cust_CMCustNo 
    sbfCust_CMName = Cust_CMName
    sbfCust_CMAddr1 = Cust_CMAddr1
    sbfCust_CMCity = Cust_CMCity
    sbfCust_CMState = Cust_CMState
    sbfCust_CMPostCode = Cust_CMPostCode
EndSr

// Position populated subfile at top row (the zeroth row). 
BegSr sbfCust_GoToRow
    DclSrParm TargetRow Type(*Integer) Len(4) 

    DclConst LEFT_MOST_COLUMN Value(0)
    // The Select method selects the given row of the subfile. 
    // If there are no rows in the subfile, the Select method
    // fails. Wrapping it an Eval statement and using 
    // Err(*Extended) 'eats' the error letting Select method 
    // fail silently. 

    // You need to provide a zero-based row and column to the 
    // Select method. Zero is the top row and zero is the left-most 
    // column. Constants are used to avoid using "magic numbers" 
    // that be confusing later. 
    Eval F2(sbfCust.Select(TargetRow, LEFT_MOST_COLUMN)) Err(*Extended)
EndSr
 
// Position subfile at a new location. 
BegFunc sbfCust_PositionTo Type(*Ind) 
    DclSrParm PositionToName Type(*String)
//    DclFld SaveName Type(*String) 
    
    // Is position-to value key in the file
    SetLL Cust Key(PositionToName)
    If (%FOUND(Cust))
        // If so, show the next page from there.
        sbfCust_ShowPage()        
        LeaveSr *True 
    Else
        // Otherwise, reselect the subfile's top row and 
        // display a message. 
        sbfCust_GoToRow(TOP_ROW)        
        MsgBox Title('Search results') Msg('No records found')
        textboxPositionTo.SetFocus()
        LeaveSr *False 
    EndIf
EndFunc 

BegSr sbfCust_SetFields
    // Move fields from disk file to subfile.
EndSr
 
// Assign field values for customer info panel 
// above the subfile. 
BegSr sbfCust_SetInfoDisplay    
    labelName.Caption      = sbfCust_CMName
    labelAddress.Caption   = sbfCust_CMAddr1
    labelCSZ.Caption       = %TRIM(sbfCust_CMCity) + ', ' ++
                             sbfCust_CMState + '  ' ++
                             sbfCust_CMPostCode
EndSr

// Refresh the subfile from a given name.
BegSr sbfCust_Refresh
    DclSrParm CMName Type(*String) 

    DclFld SaveRow Type(*Integer) Len(4)

    SaveRow = sbfCust.Row 

    If CMName = *Blanks   
        Chain sbfCust Key(1) 
        SetLL Cust Key(sbfCust_CMName)         
    Else 
        SetLL Cust Key(CMName)             
    EndIf         
    sbfCust_ShowPage()
    sbfCust_GoToRow(SaveRow)
EndSr 

// Poll for 'f', 'p', 'n', and 'l' keypresses to behave as accelerator keys 
// for the corresponding subfile page actions. 
BEGSR sbfCust KeyPress
    DclSrParm KeyAscii TYPE(*INTEGER) LEN(2) BY(*REFERENCE)

    DclConst ESCAPE_KEY Value(27)   
    DclConst LOWER_F_KEY Value(102)
    DclConst LOWER_N_KEY Value(110)
    DclConst LOWER_P_KEY Value(112)
    DclConst LOWER_L_KEY Value(108)

    // The escape key cancels an inline row edit.
    If KeyAscii = ESCAPE_KEY         
        sbfCust_Refresh(*BLANKS) 
    EndIf 

    If sbfCust.Browse = *False 
        LeaveSr
    EndIf 

    Case Cond(KeyAscii = LOWER_F_KEY) Sr(sbfCust_ShowFirstPage) 
    Case Cond(KeyAscii = LOWER_P_KEY) Sr(sbfCust_ShowPreviousPage) 
    Case Cond(KeyAscii = LOWER_N_KEY) Sr(sbfCust_ShowPage) 
    Case Cond(KeyAscii = LOWER_L_KEY) Sr(sbfCust_ShowLastPage) 
    EndCs
ENDSR

// Set the first and previous page buttons' enabled status. 
BegSr SetLeftButtonsStatus
    DclSrParm Enabled Type(*Ind) 

    // AVR Classic doesn't have an image button. This program uses the 
    // image control to simulate image buttons. This is a little extra
    // work because you need enabled and disabled images, but it 
    // removes dependence on a third-party button control. See the 
    // note at the bottom of this page to read about a way to create images
    // for this purpose.     
    If (Enabled)
        LoadPicture File('left-end-arrow.jpg') target(imageFirstPage) 
        LoadPicture File('left-arrow.jpg') target(imagePreviousPage) 
        imageFirstPage.Enabled = *True
        imagePreviousPage.Enabled = *True 
    Else
        LoadPicture File('left-end-arrow-disabled.jpg') target(imageFirstPage) 
        LoadPicture File('left-arrow-disabled.jpg') target(imagePreviousPage) 
        imageFirstPage.Enabled = *False
        imagePreviousPage.Enabled = *False
    EndIf  
EndSr 

// Set next and last page buttons' enabled status. 
BegSr SetRightButtonsStatus
    DclSrParm Enabled Type(*Ind) 
    
    If (Enabled)
        LoadPicture File('right-end-arrow.jpg') target(imageLastPage) 
        LoadPicture File('right-arrow.jpg') target(imageNextPage) 
        imageLastPage.Enabled = *True
        imageNextPage.Enabled = *True 
    Else
        LoadPicture File('right-end-arrow-disabled.jpg') target(imageLastPage) 
        LoadPicture File('right-arrow-disabled.jpg') target(imageNextPage) 
        imageLastPage.Enabled = *False
        imageNextPage.Enabled = *False 
    EndIf  
EndSr 

BegFunc UpdateCustomer Type(*Boolean) 
    DclSrParm CustomerNumber Type(*Integer) Len(4) 

    Chain CustUpdate Key(CustomerNumber) Err(*Extended) 
    If %Found() 
        Cust_CMName = sbfCust_CMName
        Cust_CMAddr1 = sbfCust_CMAddr1
        Update CustUpdate    
        LeaveSr *True
    Else 
        Unlock CustUpdate
        LeaveSr *False
    EndIf
EndFunc 

BegFunc ValidateInputForCustomer Type(*Boolean)
    DclFld Valid Type(*Boolean)

    If sbfCust_CMName = *Blanks  
        SetMessageText('Please enter a name')
        LeaveSr *False
    EndIf 

    If sbfCust_CMAddr1 = *Blanks  
        SetMessageText('Please enter an address')
        LeaveSr *False
    EndIf 

    LeaveSr *True 
EndFunc 

// Every page (first, previous, next, and last) are displayed 
// with the sbfCust_ShowNextPage routine. To page through the 
// file backwards, this routine reads backwards through the file 
// SUBFILE_ROWS + 1 rows. It does this to position the file 
// pointer so that sbfCust_ShowNextPage displays the correct page.  
BegSr ReadCustOnePageBackwards
    DclFld BegOfFile  Type( *Boolean )

    Do FromVal(1) ToVal(SUBFILE_ROWS + 1)
        ReadP Cust BOF(BegOfFile)
        If BegOfFile
            SetLL Cust Key(*Start) 
        EndIf
    EndDo
EndSr
 
// Set subfile row color.
BegSr SetRowColor 
    DclSrParm SubfileRRN   Type(*Integer) Len(4)

    DclFld SubfileRow Type(*Integer) Len(4) 

    // The RRN is one-based--so adjust to zero-based to 
    // reference a subfile row.
    SubfileRow = SubfileRRN - 1

    If IsEven(SubfileRow)
        // The labelEvenRowColor and labelOddRowColor are purely for 
        // the convenience of setting 
        sbfCust.RecBackColor[SubfileRow] = labelEvenRowColor.BackColor
    Else
        sbfCust.RecBackColor[SubfileRow] = labelOddRowColor.BackColor
    EndIf
EndSr

// Return remainder of integer division.
BegFunc IsEven Type(*Ind) 
    DclSrParm Value Type(*Integer) Len(4) 

    DclConst EVEN_DIVISOR Value(2) 

    LeaveSr Value(%REM(Value, EVEN_DIVISOR) = 0)
EndFunc  

// Return true if there are more records backward, given the 
// key value on the first row displayed. 
BegFunc MoreRecordsBack Type(*Ind) 
    Chain sbfCust Key(1)  
    SetLL Cust Key(sbfCust_CMName) 
    ReadP Cust Err(*Extended) 
   
    LeaveSr Value(NOT %EOF(Cust)) 
EndFunc 

// Return true if there are more records forward, given the 
// key value on the last row displayed. 
BegFunc MoreRecordsForward Type(*Ind) 
    Chain sbfCust Key(sbfCust.RowCount)  
    SetGT Cust Key(sbfCust_CMName) 
    LeaveSr %Found(Cust) 
EndFunc 

// ### Creating images for AVR class'c image control. 
// The [FontAwesome](https://fontawesome.com/icons) site provides free SVG 
// images for Web development. SVG images aren't much help to AVR Classic, 
// but the [fa2png](http://fa2png.io/) site freely translates a FontAwesome
// SVG to a PNG. Create a 32px PNG with the fa2png site, then use MS Paint 
// to save that PNG as a JPG. (AVR Classic's Image control doesn't work with 
// PNG files. 

BegSr SetMessageText
    DclSrParm Text Type(*String) 

    labelMessage.Caption = Text 
    timerMessage.Enabled = *True 
EndSr

BEGSR timerMessage Timer
    labelMessage.Caption = ''
    timerMessage.Enabled = *False  
ENDSR

BegFunc CompareNameToSubfileRowName Type(*Boolean) 
    DclSrParm RRN Type(*Integer) Len(4) 
    DclSrParm CMName Type(*String) 

    Chain sbfCust Key(RRN) 
    LeaveSr Value(sbfCust_CMname = CMName)
EndFunc 

// Call form to update customer. 
BegSr CustomerUpdateWithForm
    DclFld CMName Type(*Char) Len(40) 
    DclFld Updated Type(*Char) Len(1) 
    DclFld CurrentRow Type(*Integer) Len(4) 

    CurrentRow = sbfCust.Row 

    Call pgm('formCustCRUD') 
        DclParm sbfCust_CMCustNo 
        DclParm CMName
        DclParm Updated

    If Updated = RECORD_UPDATED 
        If CompareNameToSubfileRowName(CurrentRow + 1, CMName)
            sbfCust_Refresh(*Blanks) 
            sbfCust_GoToRow(CurrentRow)    
        Else 
            sbfCust_Refresh(CMName)   
        EndIf 
    EndIf
ENDSR